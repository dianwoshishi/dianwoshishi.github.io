{"title":"Python的for_else结构你使用过吗","uid":"3b90117533ae5e7d7401814a79808610","slug":"Python的for_else结构你使用过吗","date":"2022-03-01T13:42:31.591Z","updated":"2022-03-02T08:12:02.786Z","comments":true,"path":"api/articles/Python的for_else结构你使用过吗.json","cover":null,"content":"<p>大家好，我是明说网络的小明同学。</p>\n<p>今天学到了一个Python的非常有用的新知识，在这分享给大家，相信能让大家的代码更加简洁。</p>\n<p>在编写程序的过程中，一种常见的运行流程是：运行for循环，直到找到某个对象，然后跳出循环。</p>\n<p>这里有个问题，如果我跳出循环或循环结束，我需要确定发生了什么情况。<br>一种方法是创建一个标志或存储变量，让我进行第二次测试，查看循环是如何退出的。</p>\n<p>例如，假设我需要搜索一个列表并处理每个项目，直到找到一个标志项目，然后停止处理。如果缺少标志项，则需要引发异常。</p>\n<p>像这样</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">flagfound <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> mylist<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> theflag<span class=\"token punctuation\">:</span>\n        flagfound <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">break</span>\n    process<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> flagfound<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">\"List argument missing terminal flag.\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>所以就出现了上面代码中的<code>flagfound</code>变量。但是维护这个<code>flagfound</code>超难受！</p>\n<p>如果你有这个问题，那么恭喜你，<code>for...else</code>能够结束你的痛苦。</p>\n<p>但是使用<code>for...else</code>结构，却能使你的代码更加的简洁，看下面的代码，是否更加简洁？</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> mylist<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> theflag<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    process<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">\"List argument missing terminal flag.\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>for...else</code>你学会了吗?</p>\n<p>参考资料</p>\n<p><a href=\"https://stackoverflow.com/questions/9979970/why-does-python-use-else-after-for-and-while-loops/9980752#9980752\">if statement - Why does python use &#39;else&#39; after for and while loops? - Stack Overflow</a></p>\n","text":"大家好，我是明说网络的小明同学。 今天学到了一个Python的非常有用的新知识，在这分享给大家，相信能让大家的代码更加简洁。 在编写程序的过程中，一种常见的运行流程是：运行for循环，直到找到某个对象，然后跳出循环。 这里有个问题，如果我跳出循环或循环结束，我需要确定发生了什么情...","link":"","photos":[],"count_time":{"symbolsCount":808,"symbolsTime":"1 mins."},"categories":[{"name":"编程开发","slug":"编程开发","count":7,"path":"api/categories/编程开发.json"}],"tags":[{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"},{"name":"技巧","slug":"技巧","count":1,"path":"api/tags/技巧.json"}],"toc":"","author":{"name":"明说网络","slug":"blog-author","avatar":"https://pic3.zhimg.com/v2-7803c8223e2c425aea4fc530975ee5f2_xl.jpg","link":"/","description":"和你去看网络空间","socials":{"github":"https://github.com/dianwoshishi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2119505607","zhihu":"https://www.zhihu.com/people/dianwoshishi","csdn":"https://blog.csdn.net/wanglihongwm","juejin":"","customs":{"bilibili":{"link":"https://space.bilibili.com/432126410"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"程序性能测试方法和工具","uid":"3ec2f930090650c3a17b37084a336b7a","slug":"程序性能测试","date":"2022-02-28T02:49:38.000Z","updated":"2022-02-28T03:09:47.190Z","comments":true,"path":"api/articles/程序性能测试.json","cover":null,"text":"程序性能测试方法和工具在开发的过程中，对于编码是一个部分，但同时写出来的代码怎么样，在操作系统上的表现怎么样，是需要进行测试的。这里就给出一些性能测试的方法和工具 python CProfilepython3 -m cProfile test_python_profiling.p...","link":"","photos":[],"count_time":{"symbolsCount":738,"symbolsTime":"1 mins."},"categories":[{"name":"编程开发","slug":"编程开发","count":7,"path":"api/categories/编程开发.json"},{"name":"性能测试","slug":"编程开发/性能测试","count":1,"path":"api/categories/编程开发/性能测试.json"}],"tags":[{"name":"性能工具","slug":"性能工具","count":1,"path":"api/tags/性能工具.json"},{"name":"系统资源","slug":"系统资源","count":1,"path":"api/tags/系统资源.json"}],"author":{"name":"明说网络","slug":"blog-author","avatar":"https://pic3.zhimg.com/v2-7803c8223e2c425aea4fc530975ee5f2_xl.jpg","link":"/","description":"和你去看网络空间","socials":{"github":"https://github.com/dianwoshishi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2119505607","zhihu":"https://www.zhihu.com/people/dianwoshishi","csdn":"https://blog.csdn.net/wanglihongwm","juejin":"","customs":{"bilibili":{"link":"https://space.bilibili.com/432126410"}}}}}}