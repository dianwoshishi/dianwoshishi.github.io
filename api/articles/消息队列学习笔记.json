{"title":"消息队列学习笔记","uid":"2ff47a92226f01edf6d15cdf11e2957f","slug":"消息队列学习笔记","date":"2020-08-15T10:49:36.000Z","updated":"2022-02-27T04:05:56.757Z","comments":true,"path":"api/articles/消息队列学习笔记.json","cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>摘要：本文将描述消息队列，物联网MQTT协议，开源消息队列rabbitmq及实操</p></blockquote>\n<p>故事的开头，我们从MQ（Message Queue）说起。</p>\n<h2 id=\"什么是MQ\"><a href=\"#什么是MQ\" class=\"headerlink\" title=\"什么是MQ\"></a><strong>什么是MQ</strong></h2><p>MQ,Message queue,消息队列，就是指保存消息的一个容器。</p>\n<p>消息队列最原始的模型：生产者先将消息投递一个叫做「队列」的容器中，然后再从这个容器中取出消息，最后再转发给消费者。如下图所示：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c38c2609bee9a1f9a638a38ef503d604_b.jpg\" alt=\"img\"></p>\n<p>那么问题来了，那么为什么生产者不直接将消息发送给消费者呢？好处在哪里呢？</p>\n<p><strong>消息队列有什么优势呢？</strong></p>\n<p>如下图所示，本身串行的订单，会员，消息，推荐系统在MQ的加持下，变成了并行，系统和系统之间只依赖于MQ，而不依赖于各类系统。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-b0b81fcf533970cd71d23a85ec266e5b_b.jpg\" alt=\"img\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>参考：<a href=\"https://www.zhihu.com/question/54152397\">https://www.zhihu.com/question/54152397</a></p></blockquote>\n<p>其实，MQ在其中起到了以缓冲的作用。</p>\n<p>MQ 解决的最核心的问题：系统解耦（系统之间不相互依赖）和异步（流程不再串行）：</p>\n<p>以上为MQ的背景，下面进入正题。</p>\n<h2 id=\"物联网通信协议MQTT\"><a href=\"#物联网通信协议MQTT\" class=\"headerlink\" title=\"物联网通信协议MQTT\"></a>物联网通信协议MQTT</h2><p>下面我们来聊一聊物联网通协议MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议）。</p>\n<h3 id=\"MQTT简介\"><a href=\"#MQTT简介\" class=\"headerlink\" title=\"MQTT简介\"></a>MQTT简介</h3><p>随着 5G 时代的来临，万物互联的伟大构想正在成为现实。海量的设备接入和设备管理对网络带宽、通信协议以及平台服务架构都带来了很大挑战。尤其对于物联网设备来说，电量消耗，资源控制等都尤为重要。在此背景下MQTT应运而生。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-55ba5fc5be6df6ec686e9d149e24fc6b_b.jpg\" alt=\"img\"></p>\n<p>MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一种基于发布&#x2F;订阅（publish&#x2F;subscribe）模式的”<strong>轻量级</strong>“通讯协议，该协议构建于TCP&#x2F;IP协议上，由IBM在1999年发布（由 IBM 的 Andy Stanford-Clark 和 Arcom 的 Arlen Nipper 为了一个通过卫星网络连接输油管道的项目开发，之后 IBM 一直将 MQTT 作为一个内部协议在其产品中使用，直到 2010 年，IBM 公开发布了 MQTT 3.1 版本。在 2014 年，MQTT 协议正式成为了 OASIS（结构化信息标准促进组织）的标准协议，<a href=\"https://zhuanlan.zhihu.com/p/79455828\">来源</a>）。</p>\n<p><strong>MQTT最大优点在于，可以以极少的代码和有限的带宽，为连接远程设备提供实时可靠的消息服务</strong>。作为一种低开销、低带宽占用的即时通讯协议，使其在物联网、小型设备、移动应用等方面有较广泛的应用。MQTT 3 （当前版本3.1.1）是目前使用的最为广泛的 MQTT 协议标准。</p>\n<h3 id=\"为什么选择MQTT\"><a href=\"#为什么选择MQTT\" class=\"headerlink\" title=\"为什么选择MQTT\"></a>为什么选择MQTT</h3><p>它的设计思想是轻巧、开放、简单、规范，易于实现。这些特点使得它对很多场景来说都是很好的选择，特别是对于受限的环境如机器与机器的通信（M2M）以及物联网环境（IoT）。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b4b0136d370b5e4eb4984bd0540787c4_b.jpg\" alt=\"img\"></p>\n<h3 id=\"MQTT的应用场景\"><a href=\"#MQTT的应用场景\" class=\"headerlink\" title=\"MQTT的应用场景\"></a>MQTT的应用场景</h3><p>MQTT 协议广泛应用于物联网、移动互联网、智能硬件、车联网、电力、能源等领域。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-9f0ef4106314c5a65b15f8e71b464ac2_b.jpg\" alt=\"img\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>相关参考资料 <a href=\"https://link.zhihu.com/?target=https://www.emqx.cn/mqtt\">https://www.emqx.cn/mqtt</a> <a href=\"https://link.zhihu.com/?target=https://www.runoob.com/w3cnote/mqtt-intro.html\">https://www.runoob.com/w3cnote/mqtt-intro.html</a> <a href=\"https://link.zhihu.com/?target=https://www.jianshu.com/p/ecde412d2eeb\">https://www.jianshu.com/p/ecde412d2eeb</a> MQTT协议中文版，<a href=\"https://link.zhihu.com/?target=https://mcxiaoke.gitbooks.io/mqtt-cn/content/\">https://mcxiaoke.gitbooks.io/mqtt-cn/content/</a> <a href=\"https://zhuanlan.zhihu.com/p/158145940\">https://zhuanlan.zhihu.com/p/158145940</a></p></blockquote>\n<h3 id=\"MQTT通信模型\"><a href=\"#MQTT通信模型\" class=\"headerlink\" title=\"MQTT通信模型\"></a>MQTT通信模型</h3><p>有别于传统的客户端&#x2F;服务器通讯协议，MQTT协议并不是端到端的，消息传递通过代理，包括会话（session）也不是建立在发布者和订阅者之间，而是建立在端和代理之间。代理解除了发布者和订阅者之间的耦合。这对理解MQTT很重要</p>\n<p>通过下面两个图理解MQTT（不愧是MQ）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1c26fc1a94a6fe3da6982d7e699c5ce8_b.jpg\" alt=\"img\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-bb795ddb9ca5dc49539cc99535606478_b.jpg\" alt=\"img\"></p>\n<h3 id=\"从MQ的角度去理解MQTT\"><a href=\"#从MQ的角度去理解MQTT\" class=\"headerlink\" title=\"从MQ的角度去理解MQTT\"></a><strong>从MQ的角度去理解MQTT</strong></h3><p><strong>而MQTT是专门针对物联网设计的消息队列</strong>！实际上使用的是MQ其中的<strong>发布&#x2F;订阅模式</strong></p>\n<p><img src=\"https://pic3.zhimg.com/v2-7ea9ff24fd3b66fcff9f1932978a17e2_b.jpg\" alt=\"img\"></p>\n<p>订阅什么意思呢？举个例子，订报纸。设想一个场景：你从报亭A订阅了“人民日报”，那么一旦报亭有了”人民日报”，就会给你发一份。其实，这个“人民日报”在MQTT中就是topic的角色。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果熟悉设计模式的同学，一定会联想到观察者模式，简直是异曲同工之妙啊。 观察者模式：当对象间存在一对多关系时，则使用观察者模式（Observer Pattern）。比如，当一个对象被修改时，则会自动通知依赖它的对象。观察者模式属于行为型模式。 <a href=\"https://link.zhihu.com/?target=https://www.runoob.com/design-pattern/observer-pattern.html\">观察者模式 | 菜鸟教程</a></p></blockquote>\n<h3 id=\"MQTT中的角色\"><a href=\"#MQTT中的角色\" class=\"headerlink\" title=\"MQTT中的角色\"></a>MQTT中的角色</h3><p>在MQTT中，有三个主要的角色：</p>\n<table>\n<thead>\n<tr>\n<th>角色</th>\n<th>解释</th>\n<th>类比</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>发布者（Publish）</td>\n<td>可以是一个应用程序或一台设备</td>\n<td>类似于报纸发布者</td>\n</tr>\n<tr>\n<td>代理（Broker）（服务器）</td>\n<td>MQTT服务器以称为”消息代理”（Broker），可以是一个应用程序或一台设备。它是位于消息发布者和订阅者之间</td>\n<td>类似于以前的报刊亭，会有很多人向报亭发布报纸，报停会更具不同的订阅分发报纸。</td>\n</tr>\n<tr>\n<td>订阅者（Subscribe）</td>\n<td>可以是一个应用程序或一台设备</td>\n<td>类似于报纸订阅者</td>\n</tr>\n</tbody></table>\n<p>需要注意的是，这里的发布者和订阅者并不是绝对的。发布者可以变成订阅者，订阅者也可以变成发布者，甚至是同一台设备既可以是发布者也可以是订阅者，甚至是broker。</p>\n<p>这是与现实中报亭的例子有些区别的地方，人们可以订报纸，同时还能发报纸，甚至是自己给自己卖报纸！</p>\n<h3 id=\"MQTT消息\"><a href=\"#MQTT消息\" class=\"headerlink\" title=\"MQTT消息\"></a>MQTT消息</h3><p>这三个角色之间通过消息进行通信：MQTT传输的消息分为：主题（Topic）和负载（payload）两部分：</p>\n<ul>\n<li><p><strong>Topic</strong>，可以理解为消息的类型，订阅者订阅（Subscribe）后，就会收到该主题的消息内容（payload）</p>\n</li>\n<li><p>连接到一个应用程序消息的标签，该标签与服务器的订阅相匹配。服务器会将消息发送给订阅所匹配标签的每个客户端。一个主题可以有多个级别，级别之间用斜杠字符分隔。例如，<code>/world</code> 和 <code>emq/emqtt/emqx</code> 是有效的主题。订阅者的Topic name支持通配符<code>#</code>和<code>+</code> ：</p>\n</li>\n<li><ul>\n<li># 支持一个主题内任意级别话题</li>\n<li>+只匹配一个主题级别的通配符</li>\n</ul>\n</li>\n<li><p><strong>payload</strong>，可以理解为消息的内容，是指订阅者具体要使用的内容。</p>\n</li>\n<li><ul>\n<li><p>**Payload<code>消息体** </code>CONNECT、SUBSCRIBE、SUBACK、UNSUBSCRIBE四种类型的消息 有消息体：</p>\n</li>\n<li><ul>\n<li><code>CONNECT</code>，消息体内容主要是：客户端的ClientID、订阅的Topic、Message以及用户名和密码</li>\n<li><code>SUBSCRIBE</code>，消息体内容是一系列的要订阅的主题以及<code>QoS</code>。</li>\n<li><code>SUBACK</code>，消息体内容是服务器对于<code>SUBSCRIBE</code>所申请的主题及<code>QoS</code>进行确认和回复。</li>\n<li><code>UNSUBSCRIBE</code>，消息体内容是要订阅的主题。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"mosquitto使用\"><a href=\"#mosquitto使用\" class=\"headerlink\" title=\"mosquitto使用\"></a>mosquitto使用</h3><p>Mosquitto是一个实现了MQTT3.1协议的代理服务器，由MQTT协议创始人之一的Andy Stanford-Clark开发</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>学习网址：<br>libmosquitto编程：<a href=\"https://link.zhihu.com/?target=https://blog.csdn.net/dancer__sky/article/details/77855249\">https://blog.csdn.net/dancer__sky&#x2F;article&#x2F;details&#x2F;77855249</a><br><a href=\"https://link.zhihu.com/?target=https://www.cnblogs.com/chen1-kerr/p/7258487.html\">MQTT的学习之Mosquitto安装&amp;使用</a><br>MQTT服务端软件使用：<a href=\"https://zhuanlan.zhihu.com/p/56727359\">https://zhuanlan.zhihu.com/p/56727359</a></p></blockquote>\n<h3 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>MQTT安全篇：为何以及如何运用MQTT提供的安全特性来保证物联网项目的顺利实施 <a href=\"https://zhuanlan.zhihu.com/p/21421094\">https://zhuanlan.zhihu.com/p/21421094</a></p></blockquote>\n<h2 id=\"开源消息队列RabbitMQ\"><a href=\"#开源消息队列RabbitMQ\" class=\"headerlink\" title=\"开源消息队列RabbitMQ\"></a>开源消息队列RabbitMQ</h2><p>首先来看看官网的简介：RabbitMQ is the most widely deployed open source message broker.</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>With tens of thousands of users, RabbitMQ is one of the most popular open source message brokers. From <a href=\"https://link.zhihu.com/?target=https://www.youtube.com/watch?v=1qcTu2QUtrU\">T-Mobile</a> to <a href=\"https://link.zhihu.com/?target=https://medium.com/@runtastic/messagebus-handling-dead-letters-in-rabbitmq-using-a-dead-letter-exchange-f070699b952b\">Runtastic</a>, RabbitMQ is used worldwide at small startups and large enterprises.<br>RabbitMQ is lightweight and easy to deploy on premises and in the cloud. It supports multiple messaging protocols. RabbitMQ can be deployed in distributed and federated configurations to meet high-scale, high-availability requirements.<br>RabbitMQ runs on many operating systems and cloud environments, and provides a <a href=\"https://link.zhihu.com/?target=https://www.rabbitmq.com/devtools.html\">wide range of developer tools for most popular languages</a>.<br>RabbitMQ拥有数万用户，是最受欢迎的开源消息代理之一。从T-Mobile到Runtastic，RabbitMQ在世界各地的小型初创公司和大型企业中都有使用。RabbitMQ轻量级，易于在本地和云中部署。它支持多种消息传递协议。RabbitMQ可以在分布式和联邦配置中部署，以满足高规模、高可用性需求。RabbitMQ运行在许多操作系统和云环境上，并为最流行的语言提供了广泛的开发工具。</p></blockquote>\n<h3 id=\"部署Rabbitmq\"><a href=\"#部署Rabbitmq\" class=\"headerlink\" title=\"部署Rabbitmq\"></a>部署Rabbitmq</h3><p>随着容器化的浪潮来临，再也不用像以前一样Vmware，vitualbox费劲的安装虚拟机，费时费力去解决一些系统安装上的问题。小明同学最近也是恶补了一些容器方面的知识，赶上了浪潮的尾巴。</p>\n<p>部署rabbitmq docker非常的容易，在已经安装docker并且确保顺利运行的前提下（在确保docker正常运行，且网速可以接受的情况下）</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>经常遇到的一个问题就是网速不行，怎么办? 配置一下国内镜像</p></blockquote>\n<p><a href=\"https://link.zhihu.com/?target=https://segmentfault.com/a/1190000023117518\">Docker必备六大国内镜像 - SegmentFault 思否segmentfault.com&#x2F;a&#x2F;1190000023117518</a></p>\n<p>你只用运行下列命令即可完成</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">docker run -d --hostname my-rabbit --name some-rabbit -p 15672:15672 -e RABBITMQ_DEFAULT_USER&#x3D;user -e RABBITMQ_DEFAULT_PASS&#x3D;password rabbitmq:3-management<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意这里用了3-management这个版本，因为这个版本里面默认开启了rabbitmq_management这个插件，否则需要自己进入docker exec 启动</p></blockquote>\n<p>这条命令完成了下述过程，</p>\n<p>查找本地是否有rabbitmq:3-management的image</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">Unable to find image &#39;rabbitmq:3-management&#39; locally\n3-management: Pulling from library&#x2F;rabbitmq\n08c01a0ec47e: Pull complete\n1ceb23964d6c: Pull complete\n3cc5b082947a: Pull complete\n92491b691ce1: Pull complete\n8357a2e621fb: Pull complete\n05ad3a718787: Pull complete\n2fe7a6043e36: Pull complete\n67ae316617cc: Pull complete\nc5d125b106ab: Pull complete\n183ebf352080: Pull complete\nDigest: sha256:7edc83ca2e05d9550a49870eaad268e6fc8738d0806d12c1f2b8c8e9d96b51a5\nStatus: Downloaded newer image for rabbitmq:3-management\n616fb1f06a0750659a522e7012218d31823563f41f671809a3a1d57c3d53fc59<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>通过已有image运行，这里注意暴露15672端口，用于web访问</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\"> ~  docker run -d --hostname my-rabbit --name some-rabbit -p 15672:15672 -e RABBITMQ_DEFAULT_USER&#x3D;user -e RABBITMQ_DEFAULT_PASS&#x3D;password rabbitmq:3-management\n7de389d7c54a9b829c17b95c42b7a8d6ffb43cf1c36d6dd23baaff16ad89e5be\n ~  docker ps\nCONTAINER ID   IMAGE                   COMMAND                  CREATED         STATUS         PORTS                                                                                      NAMES\n7de389d7c54a   rabbitmq:3-management   &quot;docker-entrypoint.s…&quot;   6 seconds ago   Up 5 seconds   4369&#x2F;tcp, 5671-5672&#x2F;tcp, 15671&#x2F;tcp, 15691-15692&#x2F;tcp, 25672&#x2F;tcp, 0.0.0.0:15672-&gt;15672&#x2F;tcp   some-rabbit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>等上一会(或者直接查看容器的log,等到服务启动完毕）</p>\n<p><img src=\"https://pic2.zhimg.com/v2-44444e8da322770bdb86a62870384321_b.jpg\" alt=\"img\"></p>\n<p>rabbitmq相关端口的说明：<a href=\"https://www.rabbitmq.com/networking.html#ports\">https://www.rabbitmq.com/networking.html#ports</a></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>CLI tools, client libraries and RabbitMQ nodes also open connections (client TCP sockets). Firewalls can prevent nodes and CLI tools from communicating with each other. Make sure the following ports are accessible:</p>\n<ul>\n<li>4369: <a href=\"http://erlang.org/doc/man/epmd.html\">epmd</a>, a peer discovery service used by RabbitMQ nodes and CLI tools</li>\n<li>5672, 5671: used by AMQP 0-9-1 and AMQP 1.0 clients without and with TLS</li>\n<li>5552, 5551: used by the <a href=\"https://www.rabbitmq.com/streams.html\">RabbitMQ Stream protocol</a> clients without and with TLS</li>\n<li>6000 through 6500 (usually 6000, 6001, 6002, and so on through 6005): used by <a href=\"https://www.rabbitmq.com/stream.html\">RabbitMQ Stream</a> replication</li>\n<li>25672: used for inter-node and CLI tools communication (Erlang distribution server port) and is allocated from a dynamic range (limited to a single port by default, computed as AMQP port + 20000). Unless external connections on these ports are really necessary (e.g. the cluster uses <a href=\"https://www.rabbitmq.com/federation.html\">federation</a> or CLI tools are used on machines outside the subnet), these ports should not be publicly exposed. See <a href=\"https://www.rabbitmq.com/networking.html\">networking guide</a> for details.</li>\n<li>35672-35682: used by CLI tools (Erlang distribution client ports) for communication with nodes and is allocated from a dynamic range (computed as server distribution port + 10000 through server distribution port + 10010). See <a href=\"https://www.rabbitmq.com/networking.html\">networking guide</a> for details.</li>\n<li>15672, 15671: <a href=\"https://www.rabbitmq.com/management.html\">HTTP API</a> clients, <a href=\"https://www.rabbitmq.com/management.html\">management UI</a> and <a href=\"https://www.rabbitmq.com/management-cli.html\">rabbitmqadmin</a>, without and with TLS (only if the <a href=\"https://www.rabbitmq.com/management.html\">management plugin</a> is enabled)</li>\n<li>61613, 61614: <a href=\"https://stomp.github.io/stomp-specification-1.2.html\">STOMP clients</a> without and with TLS (only if the <a href=\"https://www.rabbitmq.com/stomp.html\">STOMP plugin</a> is enabled)</li>\n<li>1883, 8883: <a href=\"http://mqtt.org/\">MQTT clients</a> without and with TLS, if the <a href=\"https://www.rabbitmq.com/mqtt.html\">MQTT plugin</a> is enabled</li>\n<li>15674: STOMP-over-WebSockets clients (only if the <a href=\"https://www.rabbitmq.com/web-stomp.html\">Web STOMP plugin</a> is enabled)</li>\n<li>15675: MQTT-over-WebSockets clients (only if the <a href=\"https://www.rabbitmq.com/web-mqtt.html\">Web MQTT plugin</a> is enabled)</li>\n<li>15692: Prometheus metrics (only if the <a href=\"https://www.rabbitmq.com/prometheus.html\">Prometheus plugin</a> is enabled)</li>\n</ul></blockquote>\n<h3 id=\"Python实操\"><a href=\"#Python实操\" class=\"headerlink\" title=\"Python实操\"></a>Python实操</h3><p>其实，不管什么指南文档，都没有官方的文档清晰透彻。</p>\n<p><a href=\"https://link.zhihu.com/?target=https://www.rabbitmq.com/getstarted.html\">https://www.rabbitmq.com/getstarted.htmlwww.rabbitmq.com/getstarted.html</a></p>\n<p>有这样，还有那样，非常的清晰。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b1b43eecc03dc13ad5fa34afdb0caca0_b.jpg\" alt=\"img\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-250d0881dddb49344bcc5b896f65b62f_b.jpg\" alt=\"img\"></p>\n<h3 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h3><p>这个给出第一个Hello world的例子</p>\n<p>github：<a href=\"https://link.zhihu.com/?target=https://github.com/rabbitmq/rabbitmq-tutorials\">https://github.com/rabbitmq/rabbitmq-tutorials</a></p>\n<p>关于代码中用户名密码的问题看这：<a href=\"https://link.zhihu.com/?target=https://pika.readthedocs.io/en/stable/modules/parameters.html\">https://pika.readthedocs.io/en/stable/modules/parameters.html</a></p>\n<p><strong>发送：</strong></p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">python3 send.py\n [x] Sent &#39;Hello World!&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://pic2.zhimg.com/v2-ff197067ddd432e59c05ebb04c114065_b.jpg\" alt=\"img\"></p>\n<p>可以通过web界面看到，我们发送了一个消息</p>\n<p><strong>接收</strong></p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">python3 receive.py\n [*] Waiting for messages. To exit press CTRL+C\n [x] Received &#39;Hello World!&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://pic3.zhimg.com/v2-98de18075c369de428a896f080be93fe_b.jpg\" alt=\"img\"></p>\n<p>通过web界面看到，处理了一个消息</p>\n","text":" 摘要：本文将描述消息队列，物联网MQTT协议，开源消息队列rabbitmq及实操 故事的开头，我们从MQ（Message Queue）说起。 什么是MQMQ,Message queue,消息队列，就是指保存消息的一个容器。 消息队列最原始的模型：生产者先将消息投递一个叫做「队列...","link":"","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":1,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"物联网","slug":"物联网","count":1,"path":"api/tags/物联网.json"},{"name":"协议","slug":"协议","count":1,"path":"api/tags/协议.json"},{"name":"消息队列","slug":"消息队列","count":1,"path":"api/tags/消息队列.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFMQ\"><span class=\"toc-text\">什么是MQ</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%A9%E8%81%94%E7%BD%91%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AEMQTT\"><span class=\"toc-text\">物联网通信协议MQTT</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MQTT%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">MQTT简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9MQTT\"><span class=\"toc-text\">为什么选择MQTT</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MQTT%E7%9A%84%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">MQTT的应用场景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MQTT%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">MQTT通信模型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%8EMQ%E7%9A%84%E8%A7%92%E5%BA%A6%E5%8E%BB%E7%90%86%E8%A7%A3MQTT\"><span class=\"toc-text\">从MQ的角度去理解MQTT</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MQTT%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2\"><span class=\"toc-text\">MQTT中的角色</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MQTT%E6%B6%88%E6%81%AF\"><span class=\"toc-text\">MQTT消息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mosquitto%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">mosquitto使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E5%85%A8\"><span class=\"toc-text\">安全</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E6%BA%90%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97RabbitMQ\"><span class=\"toc-text\">开源消息队列RabbitMQ</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2Rabbitmq\"><span class=\"toc-text\">部署Rabbitmq</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Python%E5%AE%9E%E6%93%8D\"><span class=\"toc-text\">Python实操</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">示例代码</span></a></li></ol></li></ol>","author":{"name":"明说网络","slug":"blog-author","avatar":"https://pic3.zhimg.com/v2-7803c8223e2c425aea4fc530975ee5f2_xl.jpg","link":"/","description":"和你去看网络空间","socials":{"github":"https://github.com/dianwoshishi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2119505607","zhihu":"https://www.zhihu.com/people/dianwoshishi","csdn":"https://blog.csdn.net/wanglihongwm","juejin":"","customs":{"bilibili":{"link":"https://space.bilibili.com/432126410"}}}},"mapped":true,"prev_post":{"title":"Linux下从汇编手撕c++值传递和引用传递","uid":"343b3a587bf8e0f8dd96b05800c8d194","slug":"Linux下手撕c++-值传递和引用传递","date":"2020-08-15T10:49:36.000Z","updated":"2022-02-27T16:06:50.449Z","comments":true,"path":"api/articles/Linux下手撕c++-值传递和引用传递.json","cover":[],"text":"Linux下从汇编手撕c++-值传递和引用传递示例程序main.c 主要分为两个部分，每个部分使用一个display函数，函数内使得传入的参数自加1，然后打印到标准输出上。不同的地方在于，display1使用了值传递，display2使用了引用传递 #include &lt;st...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"编程开发","slug":"编程开发","count":7,"path":"api/categories/编程开发.json"}],"tags":[{"name":"C语言回头看","slug":"C语言回头看","count":1,"path":"api/tags/C语言回头看.json"},{"name":"汇编","slug":"汇编","count":2,"path":"api/tags/汇编.json"}],"author":{"name":"明说网络","slug":"blog-author","avatar":"https://pic3.zhimg.com/v2-7803c8223e2c425aea4fc530975ee5f2_xl.jpg","link":"/","description":"和你去看网络空间","socials":{"github":"https://github.com/dianwoshishi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2119505607","zhihu":"https://www.zhihu.com/people/dianwoshishi","csdn":"https://blog.csdn.net/wanglihongwm","juejin":"","customs":{"bilibili":{"link":"https://space.bilibili.com/432126410"}}}}},"next_post":{}}