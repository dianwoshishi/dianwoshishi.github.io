{"title":"“黑客”组织仍在积极重新调整其恶意软件库","uid":"cca119383a62ab6c2d67564c0f149f86","slug":"“黑客”组织仍在积极重新调整其恶意软件库","date":"2022-02-26T04:40:06.568Z","updated":"2022-02-26T04:40:06.571Z","comments":true,"path":"api/articles/“黑客”组织仍在积极重新调整其恶意软件库.json","cover":[],"content":"<h1 id=\"“黑客”组织仍在积极重新调整其恶意软件库\"><a href=\"#“黑客”组织仍在积极重新调整其恶意软件库\" class=\"headerlink\" title=\"“黑客”组织仍在积极重新调整其恶意软件库\"></a>“黑客”组织仍在积极重新调整其恶意软件库</h1><p><img src=\"https://www.cybersafe.news/wp-content/uploads/2020/12/trickbot-800x400.jpg\" alt=\"img\"></p>\n<h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><p>臭名昭著的TrickBot恶意软件与一种名为Diavol的新勒索软件有关联。</p>\n<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><p>根据Fortinet的FortiGuard实验室的研究人员，本月初针对其一个客户的攻击中，Diavol和Conti勒索软件的有效载荷(payloads)被部署在不同的系统上。</p>\n<p>TrickBot银行木马是一种基于Windows的犯罪软件，在目标网络上采用不同的模块达到恶意行为，包括盗取凭证和进行勒索软件攻击。</p>\n<p>据信，迄今为止，Diavol已经在被部署在实际环境中。即使不知道入侵来源，但该有效载荷的源代码与Conti的代码有相似之处，甚至其赎金说明文字与Egregor勒索软件的一些语言重复。</p>\n<h2 id=\"技术\"><a href=\"#技术\" class=\"headerlink\" title=\"技术\"></a>技术</h2><p>研究人员表示，Diavol使用用户模式的无对称加密算法、异步程序调用（APC）运行。通常情况下，勒索软件开发者的目标是在最短的时间内完成加密操作。非对称加密算法要比对称算法慢得多。</p>\n<p>该勒索软件的另一个方面是它依靠一种反分析技术，以位图图像的形式混淆其代码，从那里将例程加载到具有执行权限的缓冲区。</p>\n<p>在锁定文件和用赎金信息改变桌面壁纸之前，Diavol还执行其他功能，如在远程服务器上注册受害者设备，终止运行中的进程，在系统中寻找本地驱动器和文件进行加密，并通过删除shadow副本防止恢复。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>正如Kryptos Logic威胁情报团队所详述的那样，Wizard Spider勒索软件发展也与 “TrickBot webinject 模块的新发展 “相吻合，表明该组织仍在积极重新调整其恶意软件库。</p>\n","text":"“黑客”组织仍在积极重新调整其恶意软件库 摘要臭名昭著的TrickBot恶意软件与一种名为Diavol的新勒索软件有关联。 正文根据Fortinet的FortiGuard实验室的研究人员，本月初针对其一个客户的攻击中，Diavol和Conti勒索软件的有效载荷(payloads)...","link":"","photos":[],"count_time":{"symbolsCount":664,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E2%80%9C%E9%BB%91%E5%AE%A2%E2%80%9D%E7%BB%84%E7%BB%87%E4%BB%8D%E5%9C%A8%E7%A7%AF%E6%9E%81%E9%87%8D%E6%96%B0%E8%B0%83%E6%95%B4%E5%85%B6%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%BA%93\"><span class=\"toc-text\">“黑客”组织仍在积极重新调整其恶意软件库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%91%98%E8%A6%81\"><span class=\"toc-text\">摘要</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E6%96%87\"><span class=\"toc-text\">正文</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8A%80%E6%9C%AF\"><span class=\"toc-text\">技术</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">结论</span></a></li></ol></li></ol>","author":{"name":"明说网络","slug":"明说网络","avatar":"https://pic3.zhimg.com/v2-7803c8223e2c425aea4fc530975ee5f2_xl.jpg","link":"https://github.com/dianwoshshi","description":"A Jewllery Lover.","socials":{"github":"https://github.com/dianwoshshi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"从hello world开始，拆解函数栈结构","uid":"422918ab17fac2b9611905dfbc28c6cc","slug":"从hello-world开始，拆解函数栈结构","date":"2022-02-26T04:40:06.928Z","updated":"2022-02-26T05:20:58.557Z","comments":true,"path":"api/articles/从hello-world开始，拆解函数栈结构.json","cover":[],"text":"从hello world开始，拆解函数栈结构第一个程序helloworld编写程序首先我们有如下程序：main.c //main.c #include&lt;stdio.h> int test_stack()&#123; char name[25] = &#123;0&#125;...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[],"author":{"name":"明说网络","slug":"明说网络","avatar":"https://pic3.zhimg.com/v2-7803c8223e2c425aea4fc530975ee5f2_xl.jpg","link":"https://github.com/dianwoshshi","description":"A Jewllery Lover.","socials":{"github":"https://github.com/dianwoshshi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"C语言回头看--诡异的i++和++i","uid":"cca00432e478abca505909e6f879fd41","slug":"C语言回头看-双胞胎i-和-i的故事","date":"2022-02-26T04:40:06.466Z","updated":"2022-02-26T04:40:06.468Z","comments":true,"path":"api/articles/C语言回头看-双胞胎i-和-i的故事.json","cover":[],"text":"C语言回头看–诡异的i++和++iC语言中的i++和++i使用非常的方便，简单明了。但是很多人在学习C语言的过程中，对这两个语句还是存在恐惧，因为这两条语句会引起不必要的麻烦。例如：到底是先用再加，还是先加再用？ 同时在一些程序语句中也会出现一些令人意想不到的结果，例如i=1,(...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"开发","slug":"开发","count":3,"path":"api/categories/开发.json"},{"name":"C语言回头看","slug":"开发/C语言回头看","count":1,"path":"api/categories/开发/C语言回头看.json"}],"tags":[{"name":"C语言","slug":"C语言","count":1,"path":"api/tags/C语言.json"}],"author":{"name":"明说网络","slug":"明说网络","avatar":"https://pic3.zhimg.com/v2-7803c8223e2c425aea4fc530975ee5f2_xl.jpg","link":"https://github.com/dianwoshshi","description":"A Jewllery Lover.","socials":{"github":"https://github.com/dianwoshshi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}